{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"table\", null, [_createElementVNode(\"thead\", null, [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.headers, (header, index) => {\n    return _openBlock(), _createElementBlock(\"th\", {\n      key: index\n    }, _toDisplayString(header), 1 /* TEXT */);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.rows, (row, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(row.date), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.venue), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.time), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.eventName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.capacity), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(row.reservations), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["_createElementBlock","_createElementVNode","_Fragment","_renderList","_ctx","headers","header","index","key","_toDisplayString","rows","row","date","venue","time","eventName","capacity","reservations"],"sources":["C:\\Users\\bs010\\portfolioVan\\vue-first\\dashboard\\src\\components\\pages\\HomePage.vue"],"sourcesContent":["<template>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th v-for=\"(header, index) in headers\" :key=\"index\">{{ header }}</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(row, index) in rows\" :key=\"index\">\r\n          <td>{{ row.date }}</td>\r\n          <td>{{ row.venue }}</td>\r\n          <td>{{ row.time }}</td>\r\n          <td>{{ row.eventName }}</td>\r\n          <td>{{ row.capacity }}</td>\r\n          <td>{{ row.reservations }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </template>\r\n  \r\n  <script>\r\n  import { defineComponent, ref, onMounted } from 'vue';\r\n  import data from '../../assets/data/reserve.json'; // reserve.json 파일 경로\r\n  \r\n  export default defineComponent({\r\n    name: 'TableCompo',\r\n    setup() {\r\n      const rows = ref([]);  // 테이블 데이터를 저장할 변수\r\n      const headers = ref(['날짜', '장소', '시간', '이벤트명', '수용 인원', '예약자 수']); // 헤더값\r\n  \r\n      // JSON 데이터를 불러와서 rows에 저장\r\n      onMounted(() => {\r\n        rows.value = data; // reserve.json 데이터를 테이블에 전달\r\n      });\r\n  \r\n      return {\r\n        rows,\r\n        headers,\r\n      };\r\n    }\r\n  });\r\n  </script>\r\n  \r\n  <style scoped>\r\n  table {\r\n    width: 100%;\r\n    border-collapse: collapse;\r\n  }\r\n  \r\n  th, td {\r\n    border: 1px solid #ddd;\r\n    padding: 8px;\r\n    text-align: center;\r\n  }\r\n  \r\n  th {\r\n    background-color: #f2f2f2;\r\n    font-weight: bold;\r\n  }\r\n  \r\n  tr:nth-child(even) {\r\n    background-color: #f9f9f9;\r\n  }\r\n  \r\n  tr:hover {\r\n    background-color: #f1f1f1;\r\n  }\r\n  </style>\r\n  "],"mappings":";;uBACIA,mBAAA,CAgBQ,gBAfNC,mBAAA,CAIQ,gBAHNA,mBAAA,CAEK,c,kBADHD,mBAAA,CAAqEE,SAAA,QAJ/EC,WAAA,CAIwCC,IAAA,CAAAC,OAAO,EAJ/C,CAIsBC,MAAM,EAAEC,KAAK;yBAAzBP,mBAAA,CAAqE;MAA7BQ,GAAG,EAAED;IAAK,GAAAE,gBAAA,CAAKH,MAAM;sCAGjEL,mBAAA,CASQ,iB,kBARND,mBAAA,CAOKE,SAAA,QAfbC,WAAA,CAQmCC,IAAA,CAAAM,IAAI,EARvC,CAQoBC,GAAG,EAAEJ,KAAK;yBAAtBP,mBAAA,CAOK;MAP6BQ,GAAG,EAAED;IAAK,IAC1CN,mBAAA,CAAuB,YAAAQ,gBAAA,CAAhBE,GAAG,CAACC,IAAI,kBACfX,mBAAA,CAAwB,YAAAQ,gBAAA,CAAjBE,GAAG,CAACE,KAAK,kBAChBZ,mBAAA,CAAuB,YAAAQ,gBAAA,CAAhBE,GAAG,CAACG,IAAI,kBACfb,mBAAA,CAA4B,YAAAQ,gBAAA,CAArBE,GAAG,CAACI,SAAS,kBACpBd,mBAAA,CAA2B,YAAAQ,gBAAA,CAApBE,GAAG,CAACK,QAAQ,kBACnBf,mBAAA,CAA+B,YAAAQ,gBAAA,CAAxBE,GAAG,CAACM,YAAY,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}