{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/es.iterator.constructor.js\";\nimport \"core-js/modules/es.iterator.filter.js\";\nimport \"core-js/modules/es.iterator.reduce.js\";\nimport { ref, onMounted, computed } from 'vue';\nimport card from '../compo/CardCompo.vue';\nimport data from '../../assets/data/reserve.json'; // reserve.json 파일\nimport CancelTable from '../compo/CancelTable.vue';\nimport Chart from 'chart.js/auto';\nexport default {\n  __name: 'HomePage',\n  setup(__props, {\n    expose: __expose\n  }) {\n    __expose();\n    const todayData = ref([]);\n    const headers = ref(['장소', '시간', '이벤트명', '수용 인원', '취소 요청', '잔여 좌석']);\n    const last7DaysData = ref([]); // 최근 7일 데이터\n\n    const today = new Date().toISOString().split('T')[0];\n\n    // 최근 7일의 데이터 필터터\n    const getLast7DaysData = () => {\n      const todayDate = new Date();\n      const last7Days = [];\n      for (let i = 0; i < 7; i++) {\n        const date = new Date(todayDate);\n        date.setDate(todayDate.getDate() - i);\n        const formattedDate = date.toISOString().split('T')[0];\n        last7Days.push(formattedDate);\n      }\n      last7DaysData.value = data.filter(item => last7Days.includes(item.date));\n    };\n\n    // 예약 비율 계산: 마감임박 이벤트(예약 완료 비율이 90% 이상)\n    const nearClosingEvents = computed(() => {\n      return data.filter(event => {\n        const reservationRate = event.reservations / event.capacity * 100;\n        return reservationRate >= 90; // 예약 완료 비율이 90% 이상인 이벤트 필터링\n      }).sort((a, b) => {\n        // 예약 비율을 기준으로 내림차순 정렬\n        const aRate = a.reservations / a.capacity * 100;\n        const bRate = b.reservations / b.capacity * 100;\n        return bRate - aRate;\n      });\n    });\n    onMounted(() => {\n      todayData.value = data.filter(item => item.date === today);\n      getLast7DaysData();\n      const ctx = document.getElementById('reservationsChart').getContext('2d');\n      new Chart(ctx, {\n        type: 'line',\n        data: chartData.value,\n        options: {\n          responsive: true,\n          scales: {\n            x: {\n              beginAtZero: true\n            },\n            y: {\n              beginAtZero: true,\n              max: 100 // 예약율을 기준으로 할거라 세로(Y)축은 100%를 기준으로\n            }\n          }\n        }\n      });\n    });\n\n    // 금일 참여자 수\n    const totalParticipants = computed(() => {\n      return todayData.value.reduce((total, row) => total + row.reservations, 0);\n    });\n\n    // 금일 총 수용 인원\n    const totalCapacity = computed(() => {\n      return todayData.value.reduce((total, row) => total + row.capacity, 0);\n    });\n\n    // 금일 예약 완료 수\n    const totalReservations = computed(() => {\n      return todayData.value.reduce((total, row) => total + row.reservations, 0);\n    });\n\n    // 취소 요청 수\n    const cancelRequests = computed(() => {\n      return todayData.value.reduce((total, row) => total + (row.capacity - row.reservations), 0);\n    });\n\n    // 참여율 계산\n    const participationRate = computed(() => {\n      return totalCapacity.value === 0 ? 0 : Math.round(totalParticipants.value / totalCapacity.value * 100);\n    });\n\n    // 마감임박 이벤트 테이블 헤더\n    const eventHeaders = ref(['장소', '시간', '이벤트명', '수용 인원', '예약 완료 수', '잔여 좌석', '예약 완료 비율']);\n    const __returned__ = {\n      todayData,\n      headers,\n      last7DaysData,\n      today,\n      getLast7DaysData,\n      nearClosingEvents,\n      totalParticipants,\n      totalCapacity,\n      totalReservations,\n      cancelRequests,\n      participationRate,\n      eventHeaders,\n      ref,\n      onMounted,\n      computed,\n      card,\n      get data() {\n        return data;\n      },\n      CancelTable,\n      get Chart() {\n        return Chart;\n      }\n    };\n    Object.defineProperty(__returned__, '__isScriptSetup', {\n      enumerable: false,\n      value: true\n    });\n    return __returned__;\n  }\n};","map":{"version":3,"names":["ref","onMounted","computed","card","data","CancelTable","Chart","todayData","headers","last7DaysData","today","Date","toISOString","split","getLast7DaysData","todayDate","last7Days","i","date","setDate","getDate","formattedDate","push","value","filter","item","includes","nearClosingEvents","event","reservationRate","reservations","capacity","sort","a","b","aRate","bRate","ctx","document","getElementById","getContext","type","chartData","options","responsive","scales","x","beginAtZero","y","max","totalParticipants","reduce","total","row","totalCapacity","totalReservations","cancelRequests","participationRate","Math","round","eventHeaders"],"sources":["C:/Users/bs010/portfolioVan/vue-first/dashboard/src/components/pages/HomePage.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h1 class=\"sub-title\">Today's Reservation</h1>\r\n      <div class=\"summary\">\r\n        <card :title=\"'금일 이벤트 수'\" :number=\"todayData.length\" />\r\n        <div class=\"box\">\r\n          <h3 class=\"box-title\">이벤트 참여 인원</h3>\r\n          <div class=\"parti-wrap\">\r\n            <div class=\"rate\">{{ participationRate }}%</div>\r\n            <div class=\"participants\">\r\n              <span>{{ totalParticipants }}</span> / <span>{{ totalCapacity }}</span>\r\n            </div>\r\n          </div>\r\n          <div class=\"progress\">\r\n            <div class=\"progress-bar\" :style=\"{ width: participationRate + '%' }\"></div>\r\n          </div>\r\n        </div>\r\n        <card title=\"금일 예약 완료\" :number=\"totalReservations\" />\r\n        <card title=\"취소 요청건\" :number=\"cancelRequests\" :isRed=\"true\" />\r\n        <div class=\"box\">\r\n          <h3 class=\"box-title\">인기 이벤트</h3>\r\n          <h1>강연</h1>\r\n        </div>\r\n      </div>\r\n  \r\n      <div>\r\n        <h1 class=\"sub-title\">금일 이벤트 현황</h1>\r\n        <table>\r\n          <thead>\r\n            <tr>\r\n              <th v-for=\"(header, index) in headers\" :key=\"index\">{{ header }}</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr v-for=\"(row, index) in todayData\" :key=\"index\">\r\n              <td>{{ row.venue }}</td>\r\n              <td>{{ row.time }}</td>\r\n              <td>{{ row.eventName }}</td>\r\n              <td>{{ row.capacity }}</td>\r\n              <td>{{ row.cancelled }}</td>\r\n              <td>{{ row.capacity - row.reservations }}</td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n  \r\n      <div class=\"grid-wrap\">\r\n        <div class=\"left\">\r\n          <h1 class=\"sub-title\">금일 취소 현황</h1>\r\n          <CancelTable />\r\n        </div>\r\n        <div class=\"right\">\r\n          <h1 class=\"sub-title\">일자별 예약율 (7일)</h1>\r\n          <canvas id=\"reservationsChart\"></canvas>\r\n        </div>\r\n      </div>\r\n      <div class=\"grid-wrap\">\r\n        <div class=\"left\">\r\n          <h1 class=\"sub-title\">마감임박 이벤트</h1>\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th v-for=\"(header, index) in eventHeaders\" :key=\"index\">{{ header }}</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr v-for=\"(event, index) in nearClosingEvents\" :key=\"index\">\r\n                <td>{{ event.venue }}</td>\r\n                <td>{{ event.time }}</td>\r\n                <td>{{ event.eventName }}</td>\r\n                <td>{{ event.capacity }}</td>\r\n                <td>{{ event.reservations }}</td>\r\n                <td>{{ event.capacity - event.reservations }}</td>\r\n                <td>{{ (event.reservations / event.capacity) * 100 }}%</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div class=\"right\">\r\n          <h1 class=\"sub-title\">시간대별 예약 트렌드</h1>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </template>\r\n  \r\n  <script setup>\r\n  import { ref, onMounted, computed } from 'vue';\r\n  import card from '../compo/CardCompo.vue';\r\n  import data from '../../assets/data/reserve.json'; // reserve.json 파일\r\n  import CancelTable from '../compo/CancelTable.vue';\r\n  import Chart from 'chart.js/auto';\r\n  \r\n  const todayData = ref([]);\r\n  const headers = ref(['장소', '시간', '이벤트명', '수용 인원', '취소 요청', '잔여 좌석']);\r\n  const last7DaysData = ref([]); // 최근 7일 데이터\r\n  \r\n  const today = new Date().toISOString().split('T')[0];\r\n  \r\n  // 최근 7일의 데이터 필터터\r\n  const getLast7DaysData = () => {\r\n    const todayDate = new Date();\r\n    const last7Days = [];\r\n  \r\n    for (let i = 0; i < 7; i++) {\r\n      const date = new Date(todayDate);\r\n      date.setDate(todayDate.getDate() - i);\r\n      const formattedDate = date.toISOString().split('T')[0];\r\n      last7Days.push(formattedDate);\r\n    }\r\n  \r\n    last7DaysData.value = data.filter(item => last7Days.includes(item.date));\r\n  };\r\n  \r\n  // 예약 비율 계산: 마감임박 이벤트(예약 완료 비율이 90% 이상)\r\n  const nearClosingEvents = computed(() => {\r\n    return data\r\n      .filter(event => {\r\n        const reservationRate = (event.reservations / event.capacity) * 100;\r\n        return reservationRate >= 90; // 예약 완료 비율이 90% 이상인 이벤트 필터링\r\n      })\r\n      .sort((a, b) => {\r\n        // 예약 비율을 기준으로 내림차순 정렬\r\n        const aRate = (a.reservations / a.capacity) * 100;\r\n        const bRate = (b.reservations / b.capacity) * 100;\r\n        return bRate - aRate;\r\n      });\r\n  });\r\n  \r\n  onMounted(() => {\r\n    todayData.value = data.filter(item => item.date === today);\r\n    getLast7DaysData();\r\n  \r\n    const ctx = document.getElementById('reservationsChart').getContext('2d');\r\n    new Chart(ctx, {\r\n      type: 'line',\r\n      data: chartData.value,\r\n      options: {\r\n        responsive: true,\r\n        scales: {\r\n          x: {\r\n            beginAtZero: true,\r\n          },\r\n          y: {\r\n            beginAtZero: true,\r\n            max: 100, // 예약율을 기준으로 할거라 세로(Y)축은 100%를 기준으로\r\n          }\r\n        }\r\n      }\r\n    });\r\n  });\r\n  \r\n  // 금일 참여자 수\r\n  const totalParticipants = computed(() => {\r\n    return todayData.value.reduce((total, row) => total + row.reservations, 0);\r\n  });\r\n  \r\n  // 금일 총 수용 인원\r\n  const totalCapacity = computed(() => {\r\n    return todayData.value.reduce((total, row) => total + row.capacity, 0);\r\n  });\r\n  \r\n  // 금일 예약 완료 수\r\n  const totalReservations = computed(() => {\r\n    return todayData.value.reduce((total, row) => total + row.reservations, 0);\r\n  });\r\n  \r\n  // 취소 요청 수\r\n  const cancelRequests = computed(() => {\r\n    return todayData.value.reduce((total, row) => total + (row.capacity - row.reservations), 0);\r\n  });\r\n  \r\n  // 참여율 계산\r\n  const participationRate = computed(() => {\r\n    return totalCapacity.value === 0 ? 0 : Math.round((totalParticipants.value / totalCapacity.value) * 100);\r\n  });\r\n  \r\n  // 마감임박 이벤트 테이블 헤더\r\n  const eventHeaders = ref(['장소', '시간', '이벤트명', '수용 인원', '예약 완료 수', '잔여 좌석', '예약 완료 비율']);\r\n  </script>\r\n  \r\n  <style scoped>\r\n  .grid-wrap {\r\n    display: grid;\r\n    grid-template-columns: 1fr 1fr;\r\n    gap: 20px;\r\n  }\r\n  \r\n  .summary {\r\n    width: 100%;\r\n    justify-content: space-between;\r\n    display: flex;\r\n    gap: 15px;\r\n  }\r\n  \r\n  .parti-wrap {\r\n    display: flex;\r\n    gap: 10px;\r\n    padding-bottom: 10px;\r\n    width: 80%;\r\n    justify-content: space-evenly;\r\n  }\r\n  \r\n  .rate {\r\n    width: 60px;\r\n    height: 60px;\r\n    line-height: 60px;\r\n    border-radius: 100%;\r\n    background-color: orange;\r\n    text-align: center;\r\n    color: white;\r\n  }\r\n  \r\n  .participants {\r\n    line-height: 60px;\r\n  }\r\n  \r\n  .progress {\r\n    width: 80%;\r\n    height: 15px;\r\n    border-radius: 15px;\r\n    background-color: #ccc;\r\n    position: relative;\r\n  }\r\n  \r\n  .progress-bar {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    height: 15px;\r\n    border-radius: 15px;\r\n    border: thin solid #ccc;\r\n    background-color: orange;\r\n    width: 80%;\r\n  }\r\n  \r\n  canvas {\r\n    width: 100%;\r\n    height: 400px;\r\n  }\r\n  </style>\r\n  "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}