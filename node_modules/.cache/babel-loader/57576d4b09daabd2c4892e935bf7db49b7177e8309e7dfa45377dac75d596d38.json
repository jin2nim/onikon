{"ast":null,"code":"import { createElementVNode as _createElementVNode, createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, Fragment as _Fragment } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"header\", {\n    class: \"header\"\n  }, [_createElementVNode(\"button\", {\n    class: \"menu-button\",\n    onClick: $setup.toggleMenu\n  }, \"☰\")]), _createCommentVNode(\" 사이드바 영역 \"), _createElementVNode(\"aside\", {\n    class: _normalizeClass([\"sidebar\", {\n      open: $setup.isOpen\n    }])\n  }, [_cache[1] || (_cache[1] = _createElementVNode(\"h1\", null, \"Onikon\", -1 /* HOISTED */)), _createElementVNode(\"nav\", null, [_createElementVNode(\"ul\", null, [_createElementVNode(\"li\", null, [_createVNode(_component_router_link, {\n    to: \"/\"\n  }, {\n    default: _withCtx(() => _cache[0] || (_cache[0] = [_createTextVNode(\"Dashboard\")])),\n    _: 1 /* STABLE */\n  })])])]), _createElementVNode(\"button\", {\n    class: \"close-button\",\n    onClick: $setup.toggleMenu\n  }, \"✖\")], 2 /* CLASS */), _createCommentVNode(\" 오버레이 (배경 클릭 시 닫힘) \"), $setup.isOpen ? (_openBlock(), _createElementBlock(\"div\", {\n    key: 0,\n    class: \"overlay\",\n    onClick: $setup.closeMenu\n  })) : _createCommentVNode(\"v-if\", true)], 64 /* STABLE_FRAGMENT */);\n}","map":{"version":3,"names":["_createElementBlock","_Fragment","_createElementVNode","class","onClick","$setup","toggleMenu","_createCommentVNode","_normalizeClass","open","isOpen","_createVNode","_component_router_link","to","default","_withCtx","_cache","_createTextVNode","_","key","closeMenu"],"sources":["C:\\Users\\bs010\\portfolioVan\\vue-first\\dashboard\\src\\components\\SideBar.vue"],"sourcesContent":["<template>\r\n  <header class=\"header\">\r\n    <button class=\"menu-button\" @click=\"toggleMenu\">☰</button>\r\n  </header>\r\n\r\n  <!-- 사이드바 영역 -->\r\n  <aside class=\"sidebar\" :class=\"{ open: isOpen }\">\r\n    <h1>Onikon</h1>\r\n    <nav>\r\n      <ul>\r\n        <li><router-link to=\"/\">Dashboard</router-link></li>\r\n      </ul>\r\n    </nav>\r\n    <button class=\"close-button\" @click=\"toggleMenu\">✖</button>\r\n  </aside>\r\n\r\n  <!-- 오버레이 (배경 클릭 시 닫힘) -->\r\n  <div v-if=\"isOpen\" class=\"overlay\" @click=\"closeMenu\"></div>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, onMounted, onUnmounted } from 'vue';\r\n\r\nconst isOpen = ref(false);\r\n\r\n// 메뉴 열기/닫기\r\nconst toggleMenu = () => {\r\n  isOpen.value = !isOpen.value;\r\n};\r\n\r\n// 메뉴 닫기 (오버레이 클릭 시)\r\nconst closeMenu = () => {\r\n  isOpen.value = false;\r\n};\r\n\r\n// ESC 키로 닫기\r\nconst handleKeyDown = (event) => {\r\n  if (event.key === 'Escape') {\r\n    closeMenu();\r\n  }\r\n};\r\n\r\n// 컴포넌트가 마운트될 때 이벤트 추가\r\nonMounted(() => {\r\n  window.addEventListener('keydown', handleKeyDown);\r\n});\r\n\r\n// 컴포넌트가 언마운트될 때 이벤트 제거\r\nonUnmounted(() => {\r\n  window.removeEventListener('keydown', handleKeyDown);\r\n});\r\n</script>\r\n\r\n<style scoped>\r\n/* 사이드바 스타일 */\r\n.sidebar {\r\n  width: 250px;\r\n  height: 100vh;\r\n  background: #2c3e50;\r\n  color: white;\r\n  padding: 20px;\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  transition: transform 0.3s ease-in-out;\r\n  text-align: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.header,\r\n.close-button {\r\n  display: none;\r\n}\r\n\r\nnav li a {\r\n  color: white;\r\n}\r\n\r\n/* 모바일 */\r\n@media (max-width: 768px) {\r\n  .sidebar {\r\n    transform: translateX(-100%);\r\n  }\r\n  .sidebar.open {\r\n    transform: translateX(0);\r\n  }\r\n\r\n  .header {\r\n    display: block;\r\n    background: #34495e;\r\n    padding: 10px;\r\n    text-align: left;\r\n  }\r\n\r\n  .menu-button,\r\n  .close-button {\r\n    background: none;\r\n    border: none;\r\n    font-size: 24px;\r\n    color: white;\r\n    cursor: pointer;\r\n  }\r\n\r\n  .close-button {\r\n    display: block;\r\n    position: absolute;\r\n    right: 30px;\r\n    top: 30px;\r\n  }\r\n}\r\n\r\n/* 오버레이 스타일 */\r\n.overlay {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: rgba(0, 0, 0, 0.5); /* 반투명 검은색 */\r\n  z-index: 999; /* 사이드바 아래 */\r\n}\r\n</style>\r\n"],"mappings":";;;uBAAAA,mBAAA,CAAAC,SAAA,SACEC,mBAAA,CAES;IAFDC,KAAK,EAAC;EAAQ,IACpBD,mBAAA,CAA0D;IAAlDC,KAAK,EAAC,aAAa;IAAEC,OAAK,EAAEC,MAAA,CAAAC;KAAY,GAAC,E,GAGnDC,mBAAA,aAAgB,EAChBL,mBAAA,CAQQ;IARDC,KAAK,EANdK,eAAA,EAMe,SAAS;MAAAC,IAAA,EAAiBJ,MAAA,CAAAK;IAAM;gCAC3CR,mBAAA,CAAe,YAAX,QAAM,sBACVA,mBAAA,CAIM,cAHJA,mBAAA,CAEK,aADHA,mBAAA,CAAoD,aAAhDS,YAAA,CAA2CC,sBAAA;IAA9BC,EAAE,EAAC;EAAG;IAV/BC,OAAA,EAAAC,QAAA,CAUgC,MAASC,MAAA,QAAAA,MAAA,OAVzCC,gBAAA,CAUgC,WAAS,E;IAVzCC,CAAA;YAaIhB,mBAAA,CAA2D;IAAnDC,KAAK,EAAC,cAAc;IAAEC,OAAK,EAAEC,MAAA,CAAAC;KAAY,GAAC,E,kBAGpDC,mBAAA,uBAA0B,EACfF,MAAA,CAAAK,MAAM,I,cAAjBV,mBAAA,CAA4D;IAjB9DmB,GAAA;IAiBqBhB,KAAK,EAAC,SAAS;IAAEC,OAAK,EAAEC,MAAA,CAAAe;QAjB7Cb,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}